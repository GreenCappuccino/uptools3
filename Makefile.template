# This is the template Makefile, which you should edit to compile it on your system, if
# the normal 'configure; make; make install' procedure fails.........
# If it fails, this is because header files or libraries cannot be found
# The uptools package uses X11 and Tcl/Tk, and some make variables may have to be changed
# in order to let it work........
#

VERSION       = ##VERSION
MINOR_VERSION = 02
NICI_UPT      = $(NICI_CSRC)/uptools$(VERSION)

UL_VERSION  = '"$(VERSION).$(MINOR_VERSION) March 1997  - L.Schomaker, L.Vuurpijl, G.Abbink  - NICI"'
UR_VERSION  = '"$(VERSION).$(MINOR_VERSION) March 1997  - L.Schomaker, L.Vuurpijl, G.Abbink  - NICI"'
UV_VERSION  = '"$(VERSION).$(MINOR_VERSION) March 1997  - L.Schomaker, L.Vuurpijl, G.Abbink  - NICI"'

# author = Louis Vuurpijl, vuurpijl@nici.kun.nl

#
# You may have (or want) to edit the lines below, to indicate where to find
# and place stuff. Typically, you would say that UPTOOLS is `pwd`.
# After making all executables, they are placed in $UL_BIN, libraries wil be
# in $UL_LIB. If you want to install the binaries and libraries to some
# general place, like /usr/local/bin and /usr/local/lib, change the variables
# UP_INSTALL_BIN, UP_INSTALL_LIB, UP_INSTALL_TCL and UP_INSTALL_UL_LIB
# below.
#

# edit the next line to indicate the root directory of the distribution
# to make it locally, use UPTOOLS is USE_PWD
UPTOOLS = USE_PWD

# edit the next two lines if you have your own Tcl/Tk stuff
#
# on my solaris system (unipen):
# MY_TCL_DIR =  /usr/local_unipen
# MY_TCL_LIB = -L$(MY_TCL_DIR)/lib
# on my solaris system (trajanus):
MY_TCL_DIR =  /u6/nici/software/pak/tcltk8.0
MY_TCL_LIB = -L$(MY_TCL_DIR)/lib

EXPECTED_TK_VERSION  = '"8.0"'
EXPECTED_TCL_VERSION = '"8.0"'

# if you don't, set MY_TCL_DIR to DEFAULT like:
#MY_TCL_DIR = DEFAULT

# if you do, you probably want to run upworks and you'll need
# your personalized UPWORKS_RESOURCE_FILE
UPWORKS_RESOURCE_FILE = $(HOME)/.upworksrc
# and also, you'll need a file containing fonts,
# e.g. generated by 'xlsfonts'
UPWORKS_FONTS = $(HOME)/.upworks_fonts

# the next lines are to indicate where to place stuff for installation
# UP_INSTALL_BIN    will contain the following extra executables:
#                   upview, upread, unipen2eps, uni2animgif
# UP_INSTALL_LIB    will contain the following extra libraries:
#                   libink3 libupworks3 libuplib3
# UP_INSTALL_TCL    will contain upworks
# UP_INSTALL_UL_LIB will contain tcl-libraries in 'library', and
#                   it will contain 'unipen.def' and 'UPTOOLS_SETTINGS'

# an example:
# ROOT                 = /usr/local
# UP_INSTALL_LIB       = $(ROOT)/lib
# UP_INSTALL_BIN       = $(ROOT)/bin
# UP_INSTALL_TCL       = $(ROOT)/bin
# UP_INSTALL_UL_LIB    = $(ROOT)/lib/uptools$(VERSION)

# our situation at nici: (variables come from my environment)

UP_INSTALL_BIN       = $(NICI_BIN)
UP_INSTALL_LIB       = $(NICI_LIB)
UP_INSTALL_TCL       = $(NICI_SCRIPTS)
UP_INSTALL_UL_LIB    = $(UP_INSTALL_LIB)/uptools$(VERSION)

INSTALL_MAKE_FLAGS   = UL_LIB=$(UP_INSTALL_LIB) UL_BIN=$(UP_INSTALL_BIN) SL_TARGET=$(UP_INSTALL_LIB)/libuplib$(VERSION)$(SLSUFFIX) L_TARGET=$(UP_INSTALL_LIB)/libuplib$(VERSION)$(LSUFFIX)


UL_LIB  = $(UPTOOLS)/lib
UL_BIN  = $(UPTOOLS)/bin
UL_DIR  = $(UPTOOLS)/Uplib

LINK_UPLIB = $(UL_LIB)/libuplib$(VERSION).a
LIB_UPLIB  = $(LINK_UPLIB)


# edits are not so likely below this, maybe except for X11 header files
# if your compiler complaints about not finding X11/*.h files,
# check one of the output lines of 'make configure';
# it should say were to find them

# on most systems:
# X11_INCLUDE = /usr/local/X11R6/include
# X11_LIB     = /usr/local/X11R6/lib

# on my solaris system:
X11_INCLUDE = /usr/openwin/include
X11_LIB     = /usr/openwin/lib
# on my linux system
# X11_INCLUDE   = /usr/X11R6/include
# X11_LIB       = /usr/X11R6/lib

MAY_USE_RANLIB = echo

################################################################################
# edits are very unlikely below this

LINK_X11 = -L$(X11_LIB)

#################### HP SETTINGS ###################
##HP-UX#CC       = gcc
##HP-UX#CFLAGS   = -O4 -I. -I$(X11_INCLUDE) -fPIC -Wall -pedantic -I$(UL_DIR)
##HP-UX#SLFLAGS  = -O4 -I. -I$(X11_INCLUDE) -fPIC -Wall -pedantic
##HP-UX#SL_LD    = ld -b -E -o
##HP-UX#SLSUFFIX = .sl
##HP-UX#L_LD     = ar ruv
##HP-UX#LSUFFIX  = .a
##HP-UX#LINK_LIBS     = -L$(X11_LIB) -lX11

#################### DEC SETTINGS ###################
##ULTRIX#CC        = gcc
##ULTRIX#CFLAGS    = -O4 -I. -I$(X11_INCLUDE) -Wall -pedantic -I$(UL_DIR)
##ULTRIX#SLFLAGS   = -O4 -I. -I$(X11_INCLUDE) -G 0 -Wall -pedantic
##ULTRIX#LINK_LIBS = -L/usr/lib -lX11
##ULTRIX#SL_LD     = ar ruv
##ULTRIX#SLSUFFIX  = .a
##ULTRIX#L_LD      = ar ruv
##ULTRIX#LSUFFIX   = .a
##ULTRIX#MAY_USE_RANLIB = ranlib

#################### SUN Solaris 5 SETTINGS ###################
##SunOS5#CC       = gcc
##SunOS5#CFLAGS   = -O4 -I. -I$(X11_INCLUDE) -Wall -pedantic -I$(UL_DIR) -I/usr/openwin/include
##SunOS5#SLFLAGS  = -O4 -I. -I$(X11_INCLUDE) -DPIC -fPIC -Wall -pedantic
##SunOS5#SL_LD    = ld -G -z text -o
##SunOS5#SLSUFFIX = .so
##SunOS5#L_LD     = ar ruv
##SunOS5#LSUFFIX  = .a
##SunOS5#LINK_LIBS     = -L/usr/openwin/lib -R/usr/openwin/lib -lX11 -lsocket
##SunOS5#LINK_X11     = -L$(X11_LIB) -R$(X11_LIB) $(LINK_LIBS)

#################### SUN SunOs 4 SETTINGS ###################
##SunOS4#CC       = gcc
##SunOS4#CFLAGS   = -O4 -I. -I$(X11_INCLUDE) -I/usr/local/X11/include -Wall -pedantic -I$(UL_DIR)
##SunOS4#SLFLAGS  = -O4 -I. -I$(X11_INCLUDE) -fPIC -Wall -pedantic
##SunOS4#SL_LD    = ld -o
##SunOS4#SLSUFFIX = .so.1.0
##SunOS4#L_LD     = ar ruv
##SunOS4#LSUFFIX  = .a
##SunOS4#MAY_USE_RANLIB   = ranlib
##SunOS4#LINK_LIBS     = -lX11

#################### SGI SETTINGS ###################
##IRIX#CC        = cc
##IRIX#CFLAGS    = -O -I. -I$(X11_INCLUDE) -I$(UL_DIR)
##IRIX#SLFLAGS   = -O -I. -I$(X11_INCLUDE) -KPIC
##IRIX#SL_LD     = ld -shared -o
##IRIX#SLSUFFIX  = .so
##IRIX#L_LD     = ar ruv
##IRIX#LSUFFIX  = .a
##IRIX#LINK_LIBS      = -lX11

#################### LINUX SETTINGS ###################
##Linux#CC       = gcc
##Linux#CFLAGS   = -O4 -I. -I$(X11_INCLUDE) -Wall -pedantic -I$(UL_DIR)
##Linux#SLFLAGS  = -O4 -I. -I$(X11_INCLUDE) -fPIC -Wall -pedantic
##Linux#SL_LD    = gcc -shared -Wl -o
##Linux#SLSUFFIX = .so
##Linux#LINK_LIBS     = -L/usr/X11R6/lib -lX11
##Linux#L_LD     = ar ruv
##Linux#LSUFFIX  = .a
##Linux#MAY_USE_RANLIB = ranlib

SL_TARGET    = $(UL_LIB)/libuplib$(VERSION)$(SLSUFFIX)
L_TARGET     = $(UL_LIB)/libuplib$(VERSION)$(LSUFFIX)

#################### AIX SETTINGS ###################
##AIX#CC         = cc
##AIX#CFLAGS     = -Aa -O -Daix -I. -I$(X11_INCLUDE) -I$(UL_DIR)
##AIX#SLFLAGS    = $(CFLAGS)
##AIX#SL_LD      = $(UL_LIB)/ldAix /bin/ld -bhalt:4 -bM:SRE -bE:lib.exp -H512 -T512 -o
##AIX#SLSUFFIX   = .so
##AIX#LINK_LIBS  = -L/usr/lpp/X11/lib -lX11 -lXt
##AIX#L_LD       = ar ruv
##AIX#LSUFFIX    = .a
##AIX#SL_TARGET  =
##AIX#L_TARGET   = $(UL_LIB)/libuplib$(VERSION)$(LSUFFIX)

#################### DEC OSF/1 SETTINGS thanks to Stefan Manke #################
##OSF1#CC        = cc
##OSF1#CFLAGS    = -O2 -I. -I$(X11_INCLUDE) -pedantic -I$(UL_DIR)
##OSF1#SLFLAGS   = -O2 -I. -I$(X11_INCLUDE) -G 0 -pedantic
##OSF1#LINK_LIBS = -L/usr/lib -lX11
##OSF1#SL_LD     = ar ruv
##OSF1#SLSUFFIX  = .a
##OSF1#L_LD     = ar ruv
##OSF1#LSUFFIX  = .a
##OSF1#MAY_USE_RANLIB = ranlib
